#!/usr/bin/env python3

import argparse
import os
from pathlib import Path
import subprocess
from qns.args_parser import prepare_args
import sys

def handle_parser():
    """
    Load in Parser from QNS and add docker tag
    """

    parser = prepare_args()

    parser.add_argument("-d",
                        "--docker",
                        action="store_true",
                        help="Describes whether or not to use docker-compose to run qns.",
                        dest="docker")
    return parser

def filter_out_docker_tag(str):
    return str.replace(" -d", "")

def get_raw_args():
    return filter_out_docker_tag(" ".join(sys.argv[1:]))

def run_command(cmd):
    process = subprocess.Popen(cmd.split(), stdout=subprocess.PIPE)
    output, error = process.communicate()
    if not error:
        return True, output
    else:
        return False, error

def determine_command(args):
    #Msg currently not being used. Maybe hookup with QNS logging.
    msg = ""
    cmd = ""

    if args.docker:
        msg += "Running QNS with Docker...\n"
        cmd += "docker-compose -f docker-compose.yml run qns "
    else:
        msg += "Running QNS within venv...\n"
        cmd += "./qns "

    raw_args = get_raw_args()
    return cmd + raw_args

def move_files():
    """
    Move files from QNS ouput to MSP input
    """
    
    qns_output = os.listdir("output")

    for file in qns_output:
        file_path = "output/"+file

        if file.endswith(".sizes") or file.endswith(".synteny"):
            os.rename(file_path, "../data/example_inputs/"+file)
        elif file.endswith(".conf"):
            os.rename(file_path, "../configurations/"+file)


#Start Here
os.chdir("qns")
parser = handle_parser()
args = parser.parse_args()

cmd = determine_command(args)

Path("output").mkdir(parents=True, exist_ok=True)
sucess, output = run_command(cmd)

if not sucess:
    print(output)
else:
    move_files()
    os.chdir("..")

    print("Check here for diagram: http://localhost:9090/mySyntenyPortal/htdocs/syncircos.php")
    run_command("./kick-off-docker.sh")
